{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\social media\\\\frontend1\\\\src\\\\pages\\\\Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport API from '../api/api';\nimport { AuthContext } from '../context/AuthContext';\nimport DefaultAvatar from '../components/DefaultAvatar';\nimport './Feed.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emojiList = ['😀', '😂', '😍', '😎', '😢', '😡', '��', '🙏', '🎉', '🔥'];\nconst Feed = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [content, setContent] = useState('');\n  const [image, setImage] = useState('');\n  const [error, setError] = useState('');\n  const [commentContent, setCommentContent] = useState({});\n  const [commentError, setCommentError] = useState({});\n  const [showComments, setShowComments] = useState({});\n  const [comments, setComments] = useState({});\n  const reactionTypes = [{\n    key: 'like',\n    label: 'Like',\n    emoji: '👍'\n  }, {\n    key: 'love',\n    label: 'Love',\n    emoji: '❤️'\n  }, {\n    key: 'cheer',\n    label: 'Cheer',\n    emoji: '🎉'\n  }, {\n    key: 'wow',\n    label: 'Wow',\n    emoji: '😮'\n  }];\n  const [reactions, setReactions] = useState({}); // { postId: { like: 0, love: 0, cheer: 0, wow: 0 } }\n  const [search, setSearch] = useState('');\n  const [memeReactions, setMemeReactions] = useState({}); // { memeIdx: { like: 0, love: 0, cheer: 0, wow: 0 } }\n\n  const memes = [{\n    url: 'https://i.imgflip.com/30b1gx.jpg',\n    alt: 'Drake Hotline Bling'\n  }, {\n    url: 'https://i.imgflip.com/26am.jpg',\n    alt: 'Distracted Boyfriend'\n  }, {\n    url: 'https://i.imgflip.com/1ur9b0.jpg',\n    alt: 'One Does Not Simply'\n  }, {\n    url: 'https://i.imgflip.com/3si4.jpg',\n    alt: 'Batman Slapping Robin'\n  }, {\n    url: 'https://i.imgflip.com/9ehk.jpg',\n    alt: 'Matrix Morpheus'\n  }, {\n    url: 'https://i.imgflip.com/39t1o.jpg',\n    alt: 'Ancient Aliens'\n  }, {\n    url: 'https://i.imgflip.com/2wifvo.jpg',\n    alt: 'Expanding Brain'\n  }, {\n    url: 'https://i.imgflip.com/1otk96.jpg',\n    alt: 'Left Exit 12 Off Ramp'\n  }, {\n    url: 'https://i.imgflip.com/4acd7j.png',\n    alt: 'Woman Yelling at Cat'\n  }, {\n    url: 'https://i.imgflip.com/2fm6x.jpg',\n    alt: 'Gru’s Plan'\n  }, {\n    url: 'https://i.imgflip.com/1g8my4.jpg',\n    alt: 'Mocking SpongeBob'\n  }, {\n    url: 'https://i.imgflip.com/4t0m5.jpg',\n    alt: 'Change My Mind'\n  }];\n  const suggestions = [{\n    name: 'Shah Rukh Khan',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Shah_Rukh_Khan_grace_the_launch_of_the_new_Santro.jpg'\n  }, {\n    name: 'Priyanka Chopra',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Priyanka_Chopra_2018.jpg'\n  }, {\n    name: 'Tom Cruise',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Tom_Cruise_by_Gage_Skidmore_2.jpg'\n  }, {\n    name: 'Taylor Swift',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/f/f2/Taylor_Swift_Red_Tour_5%2C_2013.jpg'\n  }, {\n    name: 'NASA',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/e/e5/NASA_logo.svg'\n  }, {\n    name: 'Virat Kohli',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/1/1e/Virat_Kohli_2018.jpg'\n  }, {\n    name: 'Cristiano Ronaldo',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Cristiano_Ronaldo_2018.jpg'\n  }, {\n    name: 'Selena Gomez',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6d/Selena_Gomez_at_2019_American_Music_Awards.png'\n  }, {\n    name: 'Amitabh Bachchan',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Amitabh_Bachchan_KBC_2017.jpg'\n  }, {\n    name: 'Billie Eilish',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Billie_Eilish_2019.jpg'\n  }, {\n    name: 'Marvel',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/MarvelLogo.svg'\n  }, {\n    name: 'FC Barcelona',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/4/47/FC_Barcelona_%28crest%29.svg'\n  }, {\n    name: 'Oprah Winfrey',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/8/8f/Oprah_in_2014.jpg'\n  }, {\n    name: 'Sachin Tendulkar',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/2/25/Sachin_Tendulkar_at_MRF_Promotion_Event.jpg'\n  }];\n  const [following, setFollowing] = useState({}); // { name: true/false }\n  const handleFollow = name => setFollowing(prev => ({\n    ...prev,\n    [name]: !prev[name]\n  }));\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await API.get('/posts');\n        setPosts(res.data);\n      } catch (err) {\n        // handle error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handlePost = async e => {\n    e.preventDefault();\n    if (!content.trim()) return;\n    try {\n      const res = await API.post('/posts', {\n        content,\n        image\n      });\n      setPosts([res.data, ...posts]);\n      setContent('');\n      setImage('');\n      setError('');\n    } catch (err) {\n      setError('Failed to create post');\n    }\n  };\n  const handleComment = async (e, postId) => {\n    var _commentContent$postI;\n    e.preventDefault();\n    if (!((_commentContent$postI = commentContent[postId]) !== null && _commentContent$postI !== void 0 && _commentContent$postI.trim())) return;\n    try {\n      const res = await API.post(`/comments/${postId}`, {\n        content: commentContent[postId]\n      });\n      setComments(prev => ({\n        ...prev,\n        [postId]: [...(prev[postId] || []), res.data]\n      }));\n      setCommentContent(prev => ({\n        ...prev,\n        [postId]: ''\n      }));\n      setCommentError(prev => ({\n        ...prev,\n        [postId]: ''\n      }));\n    } catch (err) {\n      setCommentError(prev => ({\n        ...prev,\n        [postId]: 'Failed to add comment'\n      }));\n    }\n  };\n  const fetchComments = async postId => {\n    try {\n      const res = await API.get(`/comments/${postId}`);\n      setComments(prev => ({\n        ...prev,\n        [postId]: res.data\n      }));\n    } catch (err) {\n      setComments(prev => ({\n        ...prev,\n        [postId]: []\n      }));\n    }\n  };\n  const toggleComments = postId => {\n    setShowComments(prev => ({\n      ...prev,\n      [postId]: !prev[postId]\n    }));\n    if (!comments[postId]) fetchComments(postId);\n  };\n  const handleLike = async (postId, liked) => {\n    try {\n      if (liked) {\n        const res = await API.post(`/posts/${postId}/unlike`);\n        setPosts(posts => posts.map(p => p._id === postId ? {\n          ...p,\n          likes: p.likes.filter(uid => uid !== user.id)\n        } : p));\n      } else {\n        const res = await API.post(`/posts/${postId}/like`);\n        setPosts(posts => posts.map(p => p._id === postId ? {\n          ...p,\n          likes: [...(p.likes || []), user.id]\n        } : p));\n      }\n    } catch {}\n  };\n  const handleReaction = (postId, type) => {\n    setReactions(prev => {\n      var _prev$postId;\n      return {\n        ...prev,\n        [postId]: {\n          ...(prev[postId] || {}),\n          [type]: (((_prev$postId = prev[postId]) === null || _prev$postId === void 0 ? void 0 : _prev$postId[type]) || 0) + 1\n        }\n      };\n    });\n  };\n  const handleMemeReaction = (idx, type) => {\n    setMemeReactions(prev => {\n      var _prev$idx;\n      return {\n        ...prev,\n        [idx]: {\n          ...(prev[idx] || {}),\n          [type]: (((_prev$idx = prev[idx]) === null || _prev$idx === void 0 ? void 0 : _prev$idx[type]) || 0) + 1\n        }\n      };\n    });\n  };\n  const stories = [{\n    name: 'You',\n    avatar: (user === null || user === void 0 ? void 0 : user.avatar) || '',\n    isUser: true\n  }, {\n    name: 'Shah Rukh',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Shah_Rukh_Khan_grace_the_launch_of_the_new_Santro.jpg'\n  }, {\n    name: 'Priyanka',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Priyanka_Chopra_2018.jpg'\n  }, {\n    name: 'Tom',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Tom_Cruise_by_Gage_Skidmore_2.jpg'\n  }, {\n    name: 'Taylor',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/f/f2/Taylor_Swift_Red_Tour_5%2C_2013.jpg'\n  }, {\n    name: 'NASA',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/e/e5/NASA_logo.svg'\n  }];\n\n  // Demo Instagram-style posts for celebs\n  const celebPosts = [{\n    author: 'Shah Rukh Khan',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Shah_Rukh_Khan_grace_the_launch_of_the_new_Santro.jpg',\n    content: 'On set for a new movie.',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Shah_Rukh_Khan_grace_the_launch_of_the_new_Santro.jpg',\n    time: '2h ago'\n  }, {\n    author: 'Priyanka Chopra',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Priyanka_Chopra_2018.jpg',\n    content: 'At the awards night.',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Priyanka_Chopra_2018.jpg',\n    time: '3h ago'\n  }, {\n    author: 'Tom Cruise',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Tom_Cruise_by_Gage_Skidmore_2.jpg',\n    content: 'Mission accomplished.',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Tom_Cruise_by_Gage_Skidmore_2.jpg',\n    time: '1h ago'\n  }, {\n    author: 'NASA',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/e/e5/NASA_logo.svg',\n    content: 'James Webb Space Telescope captures new galaxy.',\n    image: 'https://www.nasa.gov/sites/default/files/thumbnails/image/webb_first_deep_field.png',\n    time: '5h ago'\n  }, {\n    author: 'Marvel',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/MarvelLogo.svg',\n    content: 'New Avengers movie announced!',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/MarvelLogo.svg',\n    time: '6h ago'\n  }, {\n    author: 'Virat Kohli',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/1/1e/Virat_Kohli_2018.jpg',\n    content: 'Victory selfie after the match!',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/1/1e/Virat_Kohli_2018.jpg',\n    time: '4h ago'\n  }, {\n    author: 'Selena Gomez',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6d/Selena_Gomez_at_2019_American_Music_Awards.png',\n    content: 'Backstage at the AMAs.',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/6/6d/Selena_Gomez_at_2019_American_Music_Awards.png',\n    time: '7h ago'\n  }, {\n    author: 'Amitabh Bachchan',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Amitabh_Bachchan_KBC_2017.jpg',\n    content: 'On the set of KBC.',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Amitabh_Bachchan_KBC_2017.jpg',\n    time: '8h ago'\n  }, {\n    author: 'Billie Eilish',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Billie_Eilish_2019.jpg',\n    content: 'Live at the concert!',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Billie_Eilish_2019.jpg',\n    time: '9h ago'\n  }, {\n    author: 'FC Barcelona',\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/4/47/FC_Barcelona_%28crest%29.svg',\n    content: 'Celebrating the win!',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/4/47/FC_Barcelona_%28crest%29.svg',\n    time: '10h ago'\n  }];\n  const filteredSuggestions = suggestions.filter(s => s.name.toLowerCase().includes(search.toLowerCase()));\n  const filteredPosts = posts.filter(post => post.content.toLowerCase().includes(search.toLowerCase()) || post.author.username.toLowerCase().includes(search.toLowerCase()));\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-skeleton\",\n    role: \"status\",\n    \"aria-live\": \"polite\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeleton-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), [...Array(3)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeleton-post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-line short\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search celebrities, users, or posts...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending-memes-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD25 Trending Memes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trending-memes-list\",\n        children: memes.map((meme, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-card meme-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-header\",\n            children: [/*#__PURE__*/_jsxDEV(DefaultAvatar, {\n              size: 40\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Trending Meme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-time\",\n                children: \"Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            children: meme.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: meme.url,\n            alt: meme.alt,\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-actions\",\n            children: reactionTypes.map(rt => {\n              var _memeReactions$idx;\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `reaction-btn reaction-${rt.key}`,\n                type: \"button\",\n                onClick: () => handleMemeReaction(idx, rt.key),\n                \"aria-label\": rt.label,\n                children: [rt.emoji, \" \", rt.label, \" \", (_memeReactions$idx = memeReactions[idx]) !== null && _memeReactions$idx !== void 0 && _memeReactions$idx[rt.key] ? memeReactions[idx][rt.key] : 0]\n              }, rt.key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, meme.url, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stories-bar\",\n      children: stories.map(story => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `story-ring${story.isUser ? ' your-story' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: story.avatar || 'https://ui-avatars.com/api/?name=' + encodeURIComponent(story.name),\n          alt: story.name,\n          className: \"story-avatar\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = 'https://ui-avatars.com/api/?name=' + encodeURIComponent(story.name);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"story-name\",\n          children: story.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, story.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memes-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Trending Memes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memes-scroll\",\n        children: memes.map(meme => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.url,\n          alt: meme.alt,\n          className: \"meme-img\"\n        }, meme.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggested-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Suggested for You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested-list\",\n        children: filteredSuggestions.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggested-card\",\n          onClick: () => navigate(`/profile/${encodeURIComponent(s.name)}`),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: s.avatar,\n            alt: s.name,\n            className: \"suggested-avatar\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = 'https://ui-avatars.com/api/?name=' + encodeURIComponent(s.name);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggested-info\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggested-name\",\n              children: s.name.split(new RegExp(`(${search})`, 'gi')).map((part, i) => part.toLowerCase() === search.toLowerCase() && search ? /*#__PURE__*/_jsxDEV(\"mark\", {\n                children: part\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 169\n              }, this) : part)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"follow-btn\",\n            onClick: e => {\n              e.stopPropagation();\n              handleFollow(s.name);\n            },\n            children: following[s.name] ? 'Following' : 'Follow'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, s.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handlePost,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-form-textarea-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"What's on your mind?\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"emoji-btn\",\n          tabIndex: 0,\n          \"aria-label\": \"Add emoji\",\n          onClick: e => {\n            e.preventDefault();\n            const emoji = prompt('Pick an emoji to insert:\\n' + emojiList.join(' '));\n            if (emoji && emojiList.includes(emoji)) setContent(content + emoji);\n          },\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Image URL (optional)\",\n        value: image,\n        onChange: e => setImage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Preview\",\n          onError: e => e.target.style.display = 'none'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), search ? filteredPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [post._id === posts[0]._id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spotlight-badge\",\n        title: \"Spotlight Post\",\n        children: \"\\uD83C\\uDF1F Spotlight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [post.author.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.author.avatar,\n          alt: \"avatar\",\n          className: \"post-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(DefaultAvatar, {\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.author.username.split(new RegExp(`(${search})`, 'gi')).map((part, i) => part.toLowerCase() === search.toLowerCase() && search ? /*#__PURE__*/_jsxDEV(\"mark\", {\n              children: part\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 156\n            }, this) : part)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-time\",\n            children: new Date(post.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: post.content.split(new RegExp(`(${search})`, 'gi')).map((part, i) => part.toLowerCase() === search.toLowerCase() && search ? /*#__PURE__*/_jsxDEV(\"mark\", {\n          children: part\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 171\n        }, this) : part)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        alt: \"post\",\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [reactionTypes.map(rt => {\n          var _reactions$post$_id;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `reaction-btn reaction-${rt.key}`,\n            type: \"button\",\n            onClick: () => handleReaction(post._id, rt.key),\n            \"aria-label\": rt.label,\n            children: [rt.emoji, \" \", rt.label, \" \", (_reactions$post$_id = reactions[post._id]) !== null && _reactions$post$_id !== void 0 && _reactions$post$_id[rt.key] ? reactions[post._id][rt.key] : 0]\n          }, rt.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 19\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment-btn\",\n          onClick: () => toggleComments(post._id),\n          children: [\"\\uD83D\\uDCAC \", showComments[post._id] ? 'Hide' : 'Show', \" Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }, this), showComments[post._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-section\",\n        children: [comments[post._id] ? comments[post._id].length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-comments\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"32\",\n            height: \"32\",\n            viewBox: \"0 0 32 32\",\n            \"aria-hidden\": \"true\",\n            focusable: \"false\",\n            className: \"empty-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"16\",\n              cy: \"16\",\n              r: \"15\",\n              fill: \"#f0f4fa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 133\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M10 22c0-3.314 2.686-6 6-6s6 2.686 6 6\",\n              stroke: \"#2575fc\",\n              strokeWidth: \"1.5\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 180\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"13\",\n              cy: \"14\",\n              r: \"1.2\",\n              fill: \"#2575fc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 277\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"19\",\n              cy: \"14\",\n              r: \"1.2\",\n              fill: \"#2575fc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 325\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No comments yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 23\n        }, this) : comments[post._id].map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [comment.author.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: comment.author.avatar,\n            alt: \"avatar\",\n            className: \"comment-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(DefaultAvatar, {\n            size: 28\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: comment.author.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-time\",\n              children: new Date(comment.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 27\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading comments...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), user && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"comment-form\",\n          onSubmit: e => handleComment(e, post._id),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment...\",\n            value: commentContent[post._id] || '',\n            onChange: e => setCommentContent(prev => ({\n              ...prev,\n              [post._id]: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this), commentError[post._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-error\",\n          children: commentError[post._id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this)) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [post._id === posts[0]._id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spotlight-badge\",\n        title: \"Spotlight Post\",\n        children: \"\\uD83C\\uDF1F Spotlight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [post.author.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.author.avatar,\n          alt: \"avatar\",\n          className: \"post-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(DefaultAvatar, {\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.author.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-time\",\n            children: new Date(post.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        alt: \"post\",\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [reactionTypes.map(rt => {\n          var _reactions$post$_id2;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `reaction-btn reaction-${rt.key}`,\n            type: \"button\",\n            onClick: () => handleReaction(post._id, rt.key),\n            \"aria-label\": rt.label,\n            children: [rt.emoji, \" \", rt.label, \" \", (_reactions$post$_id2 = reactions[post._id]) !== null && _reactions$post$_id2 !== void 0 && _reactions$post$_id2[rt.key] ? reactions[post._id][rt.key] : 0]\n          }, rt.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 19\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment-btn\",\n          onClick: () => toggleComments(post._id),\n          children: [\"\\uD83D\\uDCAC \", showComments[post._id] ? 'Hide' : 'Show', \" Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 15\n      }, this), showComments[post._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-section\",\n        children: [comments[post._id] ? comments[post._id].length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-comments\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"32\",\n            height: \"32\",\n            viewBox: \"0 0 32 32\",\n            \"aria-hidden\": \"true\",\n            focusable: \"false\",\n            className: \"empty-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"16\",\n              cy: \"16\",\n              r: \"15\",\n              fill: \"#f0f4fa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 133\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M10 22c0-3.314 2.686-6 6-6s6 2.686 6 6\",\n              stroke: \"#2575fc\",\n              strokeWidth: \"1.5\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 180\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"13\",\n              cy: \"14\",\n              r: \"1.2\",\n              fill: \"#2575fc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 277\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"19\",\n              cy: \"14\",\n              r: \"1.2\",\n              fill: \"#2575fc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 325\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No comments yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 23\n        }, this) : comments[post._id].map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [comment.author.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: comment.author.avatar,\n            alt: \"avatar\",\n            className: \"comment-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(DefaultAvatar, {\n            size: 28\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: comment.author.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 27\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-time\",\n              children: new Date(comment.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 60\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 23\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading comments...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 19\n        }, this), user && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"comment-form\",\n          onSubmit: e => handleComment(e, post._id),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment...\",\n            value: commentContent[post._id] || '',\n            onChange: e => setCommentContent(prev => ({\n              ...prev,\n              [post._id]: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 19\n        }, this), commentError[post._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-error\",\n          children: commentError[post._id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this)), search && celebPosts.filter(p => p.author.toLowerCase().includes(search.toLowerCase())).map((post, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.avatar,\n          alt: post.author,\n          className: \"post-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-time\",\n            children: post.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        alt: \"post\",\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 26\n      }, this)]\n    }, post.author + idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"0Ywvwg5T9TIS2cyjbQCLer7+lDE=\", false, function () {\n  return [useNavigate];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","useContext","API","AuthContext","DefaultAvatar","useNavigate","jsxDEV","_jsxDEV","emojiList","Feed","_s","user","posts","setPosts","loading","setLoading","content","setContent","image","setImage","error","setError","commentContent","setCommentContent","commentError","setCommentError","showComments","setShowComments","comments","setComments","reactionTypes","key","label","emoji","reactions","setReactions","search","setSearch","memeReactions","setMemeReactions","memes","url","alt","suggestions","name","avatar","following","setFollowing","handleFollow","prev","navigate","fetchPosts","res","get","data","err","handlePost","e","preventDefault","trim","post","handleComment","postId","_commentContent$postI","fetchComments","toggleComments","handleLike","liked","map","p","_id","likes","filter","uid","id","handleReaction","type","_prev$postId","handleMemeReaction","idx","_prev$idx","stories","isUser","celebPosts","author","time","filteredSuggestions","s","toLowerCase","includes","filteredPosts","username","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","_","i","placeholder","value","onChange","target","meme","size","src","rt","_memeReactions$idx","onClick","story","encodeURIComponent","onError","onerror","style","cursor","split","RegExp","part","stopPropagation","onSubmit","required","tabIndex","prompt","join","display","title","Date","createdAt","toLocaleString","_reactions$post$_id","length","width","height","viewBox","focusable","cx","cy","r","fill","d","stroke","strokeWidth","comment","_reactions$post$_id2","_c","$RefreshReg$"],"sources":["C:/Users/hp/social media/frontend1/src/pages/Feed.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport API from '../api/api';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport DefaultAvatar from '../components/DefaultAvatar';\r\nimport './Feed.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst emojiList = ['😀','😂','😍','😎','😢','😡','��','🙏','🎉','🔥'];\r\n\r\nconst Feed = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [content, setContent] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [commentContent, setCommentContent] = useState({});\r\n  const [commentError, setCommentError] = useState({});\r\n  const [showComments, setShowComments] = useState({});\r\n  const [comments, setComments] = useState({});\r\n  const reactionTypes = [\r\n    { key: 'like', label: 'Like', emoji: '👍' },\r\n    { key: 'love', label: 'Love', emoji: '❤️' },\r\n    { key: 'cheer', label: 'Cheer', emoji: '🎉' },\r\n    { key: 'wow', label: 'Wow', emoji: '😮' },\r\n  ];\r\n  const [reactions, setReactions] = useState({}); // { postId: { like: 0, love: 0, cheer: 0, wow: 0 } }\r\n  const [search, setSearch] = useState('');\r\n  const [memeReactions, setMemeReactions] = useState({}); // { memeIdx: { like: 0, love: 0, cheer: 0, wow: 0 } }\r\n\r\n  const memes = [\r\n    { url: 'https://i.imgflip.com/30b1gx.jpg', alt: 'Drake Hotline Bling' },\r\n    { url: 'https://i.imgflip.com/26am.jpg', alt: 'Distracted Boyfriend' },\r\n    { url: 'https://i.imgflip.com/1ur9b0.jpg', alt: 'One Does Not Simply' },\r\n    { url: 'https://i.imgflip.com/3si4.jpg', alt: 'Batman Slapping Robin' },\r\n    { url: 'https://i.imgflip.com/9ehk.jpg', alt: 'Matrix Morpheus' },\r\n    { url: 'https://i.imgflip.com/39t1o.jpg', alt: 'Ancient Aliens' },\r\n    { url: 'https://i.imgflip.com/2wifvo.jpg', alt: 'Expanding Brain' },\r\n    { url: 'https://i.imgflip.com/1otk96.jpg', alt: 'Left Exit 12 Off Ramp' },\r\n    { url: 'https://i.imgflip.com/4acd7j.png', alt: 'Woman Yelling at Cat' },\r\n    { url: 'https://i.imgflip.com/2fm6x.jpg', alt: 'Gru’s Plan' },\r\n    { url: 'https://i.imgflip.com/1g8my4.jpg', alt: 'Mocking SpongeBob' },\r\n    { url: 'https://i.imgflip.com/4t0m5.jpg', alt: 'Change My Mind' }\r\n  ];\r\n  const suggestions = [\r\n    { name: 'Shah Rukh Khan', avatar: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Shah_Rukh_Khan_grace_the_launch_of_the_new_Santro.jpg' },\r\n    { name: 'Priyanka Chopra', avatar: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Priyanka_Chopra_2018.jpg' },\r\n    { name: 'Tom Cruise', avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Tom_Cruise_by_Gage_Skidmore_2.jpg' },\r\n    { name: 'Taylor Swift', avatar: 'https://upload.wikimedia.org/wikipedia/commons/f/f2/Taylor_Swift_Red_Tour_5%2C_2013.jpg' },\r\n    { name: 'NASA', avatar: 'https://upload.wikimedia.org/wikipedia/commons/e/e5/NASA_logo.svg' },\r\n    { name: 'Virat Kohli', avatar: 'https://upload.wikimedia.org/wikipedia/commons/1/1e/Virat_Kohli_2018.jpg' },\r\n    { name: 'Cristiano Ronaldo', avatar: 'https://upload.wikimedia.org/wikipedia/commons/8/8c/Cristiano_Ronaldo_2018.jpg' },\r\n    { name: 'Selena Gomez', avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6d/Selena_Gomez_at_2019_American_Music_Awards.png' },\r\n    { name: 'Amitabh Bachchan', avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Amitabh_Bachchan_KBC_2017.jpg' },\r\n    { name: 'Billie Eilish', avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Billie_Eilish_2019.jpg' },\r\n    { name: 'Marvel', avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/MarvelLogo.svg' },\r\n    { name: 'FC Barcelona', avatar: 'https://upload.wikimedia.org/wikipedia/commons/4/47/FC_Barcelona_%28crest%29.svg' },\r\n    { name: 'Oprah Winfrey', avatar: 'https://upload.wikimedia.org/wikipedia/commons/8/8f/Oprah_in_2014.jpg' },\r\n    { name: 'Sachin Tendulkar', avatar: 'https://upload.wikimedia.org/wikipedia/commons/2/25/Sachin_Tendulkar_at_MRF_Promotion_Event.jpg' },\r\n  ];\r\n  const [following, setFollowing] = useState({}); // { name: true/false }\r\n  const handleFollow = name => setFollowing(prev => ({ ...prev, [name]: !prev[name] }));\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = await API.get('/posts');\r\n        setPosts(res.data);\r\n      } catch (err) {\r\n        // handle error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handlePost = async (e) => {\r\n    e.preventDefault();\r\n    if (!content.trim()) return;\r\n    try {\r\n      const res = await API.post('/posts', { content, image });\r\n      setPosts([res.data, ...posts]);\r\n      setContent('');\r\n      setImage('');\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Failed to create post');\r\n    }\r\n  };\r\n\r\n  const handleComment = async (e, postId) => {\r\n    e.preventDefault();\r\n    if (!commentContent[postId]?.trim()) return;\r\n    try {\r\n      const res = await API.post(`/comments/${postId}`, { content: commentContent[postId] });\r\n      setComments(prev => ({\r\n        ...prev,\r\n        [postId]: [...(prev[postId] || []), res.data]\r\n      }));\r\n      setCommentContent(prev => ({ ...prev, [postId]: '' }));\r\n      setCommentError(prev => ({ ...prev, [postId]: '' }));\r\n    } catch (err) {\r\n      setCommentError(prev => ({ ...prev, [postId]: 'Failed to add comment' }));\r\n    }\r\n  };\r\n\r\n  const fetchComments = async (postId) => {\r\n    try {\r\n      const res = await API.get(`/comments/${postId}`);\r\n      setComments(prev => ({ ...prev, [postId]: res.data }));\r\n    } catch (err) {\r\n      setComments(prev => ({ ...prev, [postId]: [] }));\r\n    }\r\n  };\r\n\r\n  const toggleComments = (postId) => {\r\n    setShowComments(prev => ({ ...prev, [postId]: !prev[postId] }));\r\n    if (!comments[postId]) fetchComments(postId);\r\n  };\r\n\r\n  const handleLike = async (postId, liked) => {\r\n    try {\r\n      if (liked) {\r\n        const res = await API.post(`/posts/${postId}/unlike`);\r\n        setPosts(posts => posts.map(p => p._id === postId ? { ...p, likes: p.likes.filter(uid => uid !== user.id) } : p));\r\n      } else {\r\n        const res = await API.post(`/posts/${postId}/like`);\r\n        setPosts(posts => posts.map(p => p._id === postId ? { ...p, likes: [...(p.likes || []), user.id] } : p));\r\n      }\r\n    } catch {}\r\n  };\r\n\r\n  const handleReaction = (postId, type) => {\r\n    setReactions(prev => ({\r\n      ...prev,\r\n      [postId]: {\r\n        ...((prev[postId]) || {}),\r\n        [type]: ((prev[postId]?.[type] || 0) + 1)\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleMemeReaction = (idx, type) => {\r\n    setMemeReactions(prev => ({\r\n      ...prev,\r\n      [idx]: {\r\n        ...((prev[idx]) || {}),\r\n        [type]: ((prev[idx]?.[type] || 0) + 1)\r\n      }\r\n    }));\r\n  };\r\n\r\n  const stories = [\r\n    { name: 'You', avatar: user?.avatar || '', isUser: true },\r\n    { name: 'Shah Rukh', avatar: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Shah_Rukh_Khan_grace_the_launch_of_the_new_Santro.jpg' },\r\n    { name: 'Priyanka', avatar: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Priyanka_Chopra_2018.jpg' },\r\n    { name: 'Tom', avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Tom_Cruise_by_Gage_Skidmore_2.jpg' },\r\n    { name: 'Taylor', avatar: 'https://upload.wikimedia.org/wikipedia/commons/f/f2/Taylor_Swift_Red_Tour_5%2C_2013.jpg' },\r\n    { name: 'NASA', avatar: 'https://upload.wikimedia.org/wikipedia/commons/e/e5/NASA_logo.svg' },\r\n  ];\r\n\r\n  // Demo Instagram-style posts for celebs\r\n  const celebPosts = [\r\n    { author: 'Shah Rukh Khan', avatar: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Shah_Rukh_Khan_grace_the_launch_of_the_new_Santro.jpg', content: 'On set for a new movie.', image: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Shah_Rukh_Khan_grace_the_launch_of_the_new_Santro.jpg', time: '2h ago' },\r\n    { author: 'Priyanka Chopra', avatar: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Priyanka_Chopra_2018.jpg', content: 'At the awards night.', image: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Priyanka_Chopra_2018.jpg', time: '3h ago' },\r\n    { author: 'Tom Cruise', avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Tom_Cruise_by_Gage_Skidmore_2.jpg', content: 'Mission accomplished.', image: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Tom_Cruise_by_Gage_Skidmore_2.jpg', time: '1h ago' },\r\n    { author: 'NASA', avatar: 'https://upload.wikimedia.org/wikipedia/commons/e/e5/NASA_logo.svg', content: 'James Webb Space Telescope captures new galaxy.', image: 'https://www.nasa.gov/sites/default/files/thumbnails/image/webb_first_deep_field.png', time: '5h ago' },\r\n    { author: 'Marvel', avatar: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/MarvelLogo.svg', content: 'New Avengers movie announced!', image: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/MarvelLogo.svg', time: '6h ago' },\r\n    { author: 'Virat Kohli', avatar: 'https://upload.wikimedia.org/wikipedia/commons/1/1e/Virat_Kohli_2018.jpg', content: 'Victory selfie after the match!', image: 'https://upload.wikimedia.org/wikipedia/commons/1/1e/Virat_Kohli_2018.jpg', time: '4h ago' },\r\n    { author: 'Selena Gomez', avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6d/Selena_Gomez_at_2019_American_Music_Awards.png', content: 'Backstage at the AMAs.', image: 'https://upload.wikimedia.org/wikipedia/commons/6/6d/Selena_Gomez_at_2019_American_Music_Awards.png', time: '7h ago' },\r\n    { author: 'Amitabh Bachchan', avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Amitabh_Bachchan_KBC_2017.jpg', content: 'On the set of KBC.', image: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Amitabh_Bachchan_KBC_2017.jpg', time: '8h ago' },\r\n    { author: 'Billie Eilish', avatar: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Billie_Eilish_2019.jpg', content: 'Live at the concert!', image: 'https://upload.wikimedia.org/wikipedia/commons/6/6e/Billie_Eilish_2019.jpg', time: '9h ago' },\r\n    { author: 'FC Barcelona', avatar: 'https://upload.wikimedia.org/wikipedia/commons/4/47/FC_Barcelona_%28crest%29.svg', content: 'Celebrating the win!', image: 'https://upload.wikimedia.org/wikipedia/commons/4/47/FC_Barcelona_%28crest%29.svg', time: '10h ago' },\r\n  ];\r\n\r\n  const filteredSuggestions = suggestions.filter(s =>\r\n    s.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  const filteredPosts = posts.filter(post =>\r\n    post.content.toLowerCase().includes(search.toLowerCase()) ||\r\n    post.author.username.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  if (loading) return (\r\n    <div className=\"feed-skeleton\" role=\"status\" aria-live=\"polite\">\r\n      <div className=\"skeleton-post-form\">\r\n        <div className=\"skeleton skeleton-textarea\"></div>\r\n        <div className=\"skeleton skeleton-input\"></div>\r\n        <div className=\"skeleton skeleton-btn\"></div>\r\n      </div>\r\n      {[...Array(3)].map((_, i) => (\r\n        <div className=\"skeleton-post-card\" key={i}>\r\n          <div className=\"skeleton skeleton-avatar\"></div>\r\n          <div className=\"skeleton skeleton-line short\"></div>\r\n          <div className=\"skeleton skeleton-line\"></div>\r\n          <div className=\"skeleton skeleton-image\"></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"feed-container\">\r\n      <div className=\"feed-search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search celebrities, users, or posts...\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n      <h2>Feed</h2>\r\n      {/* Trending Memes Section */}\r\n      <div className=\"trending-memes-section\">\r\n        <h3>🔥 Trending Memes</h3>\r\n        <div className=\"trending-memes-list\">\r\n          {memes.map((meme, idx) => (\r\n            <div key={meme.url} className=\"post-card meme-card\">\r\n              <div className=\"post-header\">\r\n                <DefaultAvatar size={40} />\r\n                <div>\r\n                  <b>Trending Meme</b>\r\n                  <div className=\"post-time\">Now</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"post-content\">{meme.alt}</div>\r\n              <img src={meme.url} alt={meme.alt} className=\"post-image\" />\r\n              <div className=\"post-actions\">\r\n                {reactionTypes.map(rt => (\r\n                  <button\r\n                    key={rt.key}\r\n                    className={`reaction-btn reaction-${rt.key}`}\r\n                    type=\"button\"\r\n                    onClick={() => handleMemeReaction(idx, rt.key)}\r\n                    aria-label={rt.label}\r\n                  >\r\n                    {rt.emoji} {rt.label} {memeReactions[idx]?.[rt.key] ? memeReactions[idx][rt.key] : 0}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"stories-bar\">\r\n        {stories.map(story => (\r\n          <div key={story.name} className={`story-ring${story.isUser ? ' your-story' : ''}`}>\r\n            <img src={story.avatar || 'https://ui-avatars.com/api/?name=' + encodeURIComponent(story.name)} alt={story.name} className=\"story-avatar\" onError={e => { e.target.onerror = null; e.target.src = 'https://ui-avatars.com/api/?name=' + encodeURIComponent(story.name); }} />\r\n            <div className=\"story-name\">{story.name}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"memes-section\">\r\n        <h4>Trending Memes</h4>\r\n        <div className=\"memes-scroll\">\r\n          {memes.map(meme => (\r\n            <img key={meme.url} src={meme.url} alt={meme.alt} className=\"meme-img\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"suggested-section\">\r\n        <h4>Suggested for You</h4>\r\n        <div className=\"suggested-list\">\r\n          {filteredSuggestions.map(s => (\r\n            <div key={s.name} className=\"suggested-card\" onClick={() => navigate(`/profile/${encodeURIComponent(s.name)}`)} style={{ cursor: 'pointer' }}>\r\n              <img src={s.avatar} alt={s.name} className=\"suggested-avatar\" onError={e => { e.target.onerror = null; e.target.src = 'https://ui-avatars.com/api/?name=' + encodeURIComponent(s.name); }} />\r\n              <div className=\"suggested-info\">\r\n                <div className=\"suggested-name\">{s.name.split(new RegExp(`(${search})`, 'gi')).map((part, i) => part.toLowerCase() === search.toLowerCase() && search ? <mark key={i}>{part}</mark> : part)}</div>\r\n              </div>\r\n              <button className=\"follow-btn\" onClick={e => { e.stopPropagation(); handleFollow(s.name); }}>\r\n                {following[s.name] ? 'Following' : 'Follow'}\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {user && (\r\n        <form className=\"post-form\" onSubmit={handlePost}>\r\n          <div className=\"post-form-textarea-wrapper\">\r\n            <textarea\r\n              placeholder=\"What's on your mind?\"\r\n              value={content}\r\n              onChange={e => setContent(e.target.value)}\r\n              required\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"emoji-btn\"\r\n              tabIndex={0}\r\n              aria-label=\"Add emoji\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                const emoji = prompt('Pick an emoji to insert:\\n' + emojiList.join(' '));\r\n                if (emoji && emojiList.includes(emoji)) setContent(content + emoji);\r\n              }}\r\n            >😊</button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Image URL (optional)\"\r\n            value={image}\r\n            onChange={e => setImage(e.target.value)}\r\n          />\r\n          {image && (\r\n            <div className=\"image-preview\">\r\n              <img src={image} alt=\"Preview\" onError={e => e.target.style.display='none'} />\r\n            </div>\r\n          )}\r\n          <button type=\"submit\">Post</button>\r\n          {error && <span className=\"post-error\">{error}</span>}\r\n        </form>\r\n      )}\r\n      {search\r\n        ? filteredPosts.map(post => (\r\n            <div key={post._id} className=\"post-card\">\r\n              {post._id === posts[0]._id && (\r\n                <div className=\"spotlight-badge\" title=\"Spotlight Post\">🌟 Spotlight</div>\r\n              )}\r\n              <div className=\"post-header\">\r\n                {post.author.avatar ? (\r\n                  <img src={post.author.avatar} alt=\"avatar\" className=\"post-avatar\" />\r\n                ) : (\r\n                  <DefaultAvatar size={40} />\r\n                )}\r\n                <div>\r\n                  <b>{post.author.username.split(new RegExp(`(${search})`, 'gi')).map((part, i) => part.toLowerCase() === search.toLowerCase() && search ? <mark key={i}>{part}</mark> : part)}</b>\r\n                  <div className=\"post-time\">{new Date(post.createdAt).toLocaleString()}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"post-content\">{post.content.split(new RegExp(`(${search})`, 'gi')).map((part, i) => part.toLowerCase() === search.toLowerCase() && search ? <mark key={i}>{part}</mark> : part)}</div>\r\n              {post.image && <img src={post.image} alt=\"post\" className=\"post-image\" />}\r\n              <div className=\"post-actions\">\r\n                {reactionTypes.map(rt => (\r\n                  <button\r\n                    key={rt.key}\r\n                    className={`reaction-btn reaction-${rt.key}`}\r\n                    type=\"button\"\r\n                    onClick={() => handleReaction(post._id, rt.key)}\r\n                    aria-label={rt.label}\r\n                  >\r\n                    {rt.emoji} {rt.label} {reactions[post._id]?.[rt.key] ? reactions[post._id][rt.key] : 0}\r\n                  </button>\r\n                ))}\r\n                <button className=\"comment-btn\" onClick={() => toggleComments(post._id)}>\r\n                  💬 {showComments[post._id] ? 'Hide' : 'Show'} Comments\r\n                </button>\r\n              </div>\r\n              {showComments[post._id] && (\r\n                <div className=\"comments-section\">\r\n                  {comments[post._id] ? (\r\n                    comments[post._id].length === 0 ? (\r\n                      <div className=\"no-comments\">\r\n                        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\" focusable=\"false\" className=\"empty-icon\"><circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"#f0f4fa\"/><path d=\"M10 22c0-3.314 2.686-6 6-6s6 2.686 6 6\" stroke=\"#2575fc\" strokeWidth=\"1.5\" fill=\"none\"/><circle cx=\"13\" cy=\"14\" r=\"1.2\" fill=\"#2575fc\"/><circle cx=\"19\" cy=\"14\" r=\"1.2\" fill=\"#2575fc\"/></svg>\r\n                        <span>No comments yet.</span>\r\n                      </div>\r\n                    ) : (\r\n                      comments[post._id].map(comment => (\r\n                        <div key={comment._id} className=\"comment\">\r\n                          {comment.author.avatar ? (\r\n                            <img src={comment.author.avatar} alt=\"avatar\" className=\"comment-avatar\" />\r\n                          ) : (\r\n                            <DefaultAvatar size={28} />\r\n                          )}\r\n                          <div>\r\n                            <b>{comment.author.username}</b> <span className=\"comment-time\">{new Date(comment.createdAt).toLocaleString()}</span>\r\n                            <div>{comment.content}</div>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    )\r\n                  ) : (\r\n                    <div>Loading comments...</div>\r\n                  )}\r\n                  {user && (\r\n                    <form className=\"comment-form\" onSubmit={e => handleComment(e, post._id)}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Add a comment...\"\r\n                        value={commentContent[post._id] || ''}\r\n                        onChange={e => setCommentContent(prev => ({ ...prev, [post._id]: e.target.value }))}\r\n                        required\r\n                      />\r\n                      <button type=\"submit\">Comment</button>\r\n                    </form>\r\n                  )}\r\n                  {commentError[post._id] && <div className=\"comment-error\">{commentError[post._id]}</div>}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        : posts.map(post => (\r\n            <div key={post._id} className=\"post-card\">\r\n              {post._id === posts[0]._id && (\r\n                <div className=\"spotlight-badge\" title=\"Spotlight Post\">🌟 Spotlight</div>\r\n              )}\r\n              <div className=\"post-header\">\r\n                {post.author.avatar ? (\r\n                  <img src={post.author.avatar} alt=\"avatar\" className=\"post-avatar\" />\r\n                ) : (\r\n                  <DefaultAvatar size={40} />\r\n                )}\r\n                <div>\r\n                  <b>{post.author.username}</b>\r\n                  <div className=\"post-time\">{new Date(post.createdAt).toLocaleString()}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"post-content\">{post.content}</div>\r\n              {post.image && <img src={post.image} alt=\"post\" className=\"post-image\" />}\r\n              <div className=\"post-actions\">\r\n                {reactionTypes.map(rt => (\r\n                  <button\r\n                    key={rt.key}\r\n                    className={`reaction-btn reaction-${rt.key}`}\r\n                    type=\"button\"\r\n                    onClick={() => handleReaction(post._id, rt.key)}\r\n                    aria-label={rt.label}\r\n                  >\r\n                    {rt.emoji} {rt.label} {reactions[post._id]?.[rt.key] ? reactions[post._id][rt.key] : 0}\r\n                  </button>\r\n                ))}\r\n                <button className=\"comment-btn\" onClick={() => toggleComments(post._id)}>\r\n                  💬 {showComments[post._id] ? 'Hide' : 'Show'} Comments\r\n                </button>\r\n              </div>\r\n              {showComments[post._id] && (\r\n                <div className=\"comments-section\">\r\n                  {comments[post._id] ? (\r\n                    comments[post._id].length === 0 ? (\r\n                      <div className=\"no-comments\">\r\n                        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\" focusable=\"false\" className=\"empty-icon\"><circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"#f0f4fa\"/><path d=\"M10 22c0-3.314 2.686-6 6-6s6 2.686 6 6\" stroke=\"#2575fc\" strokeWidth=\"1.5\" fill=\"none\"/><circle cx=\"13\" cy=\"14\" r=\"1.2\" fill=\"#2575fc\"/><circle cx=\"19\" cy=\"14\" r=\"1.2\" fill=\"#2575fc\"/></svg>\r\n                      <span>No comments yet.</span>\r\n                    </div>\r\n                  ) : (\r\n                    comments[post._id].map(comment => (\r\n                      <div key={comment._id} className=\"comment\">\r\n                        {comment.author.avatar ? (\r\n                          <img src={comment.author.avatar} alt=\"avatar\" className=\"comment-avatar\" />\r\n                        ) : (\r\n                          <DefaultAvatar size={28} />\r\n                        )}\r\n                        <div>\r\n                          <b>{comment.author.username}</b> <span className=\"comment-time\">{new Date(comment.createdAt).toLocaleString()}</span>\r\n                          <div>{comment.content}</div>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  )\r\n                ) : (\r\n                  <div>Loading comments...</div>\r\n                )}\r\n                {user && (\r\n                  <form className=\"comment-form\" onSubmit={e => handleComment(e, post._id)}>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Add a comment...\"\r\n                      value={commentContent[post._id] || ''}\r\n                      onChange={e => setCommentContent(prev => ({ ...prev, [post._id]: e.target.value }))}\r\n                      required\r\n                    />\r\n                    <button type=\"submit\">Comment</button>\r\n                  </form>\r\n                )}\r\n                {commentError[post._id] && <div className=\"comment-error\">{commentError[post._id]}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      {/* Show celeb posts if search matches */}\r\n      {search && celebPosts.filter(p => p.author.toLowerCase().includes(search.toLowerCase())).map((post, idx) => (\r\n        <div key={post.author + idx} className=\"post-card\">\r\n          <div className=\"post-header\">\r\n            <img src={post.avatar} alt={post.author} className=\"post-avatar\" />\r\n            <div>\r\n              <b>{post.author}</b>\r\n              <div className=\"post-time\">{post.time}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">{post.content}</div>\r\n          {post.image && <img src={post.image} alt=\"post\" className=\"post-image\" />}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}